
(* lexical analyzer template (TP Lex V3.0), V1.0 3-2-91 AG *)

(* global definitions: *)
 unit test;
 interface
 const string_term=256; num=257; dec=258; id=259; var_term=260; if_term=261; then_term=262; else_term=263; begin_term=264; end_term=265; and_term=266; or_term=267; 
	   round_term=268; integer_term=269; real_term=270; stringtype_term=271; char_term=272; bool_term=273; type_term=274; boolop_term=275; div_term=276; mod_term=277; read_term=278; write_term=279; assigment_term=280;
	   lex_error=404;
 function yylex: Integer;
 implementation
 uses lexlib;

function yylex : Integer;

procedure yyaction ( yyruleno : Integer );
  (* local definitions: *)
begin
  (* actions: *)
  case yyruleno of
  1:
     		returni(var_term);
  2:
    		returni(if_term);
  3:
      		returni(then_term);
  4:
      		returni(else_term);
  5:
       		returni(begin_term);
  6:
     		returni(end_term);
  7:
     		returni(and_term);
  8:
    		returni(or_term);
  9:
       		returni(round_term);
  10:
     		returni(div_term);
  11:
     		returni(mod_term);
  12:
      		returni(read_term);
  13:
       		returni(write_term);

  14:
         	returni(type_term);
  15:
      		returni(type_term);
  16:
        	returni(type_term);
  17:
      		returni(type_term);
  18:
          	returni(type_term);	

  19:
                returni(num);
  20:
             	returni(dec);
  21:
                returni(id);
  22:
          	returni(string_term);

  23:
        	returnc('+');
  24:
  		returnc('-');
  25:
  		returnc('*');
  26:
  		returnc('/');
  27:
  		returnc('<');
  28:
  		returnc('>');
  29:
  		returnc('=');
  30:
  		returnc(';');
  31:
  		returnc(':');
  32:
  		returnc('(');
  33:
  		returnc(')');
  34:
  		returnc('.');
  35:
  		returnc(',');

  36:
    	returni(boolop_term);	
  37:
    	returni(boolop_term);	
  38:
    	returni(boolop_term);	
  39:
    	returni(boolop_term);	
  40:
    	returni(boolop_term);	

  41:
        ;
  42:
        returni(lex_error);
  end;
end(*yyaction*);

(* DFA table: *)

type YYTRec = record
                cc : set of Char;
                s  : Integer;
              end;

const

yynmarks   = 211;
yynmatches = 211;
yyntrans   = 197;
yynstates  = 96;

yyk : array [1..yynmarks] of Integer = (
  { 0: }
  { 1: }
  { 2: }
  21,
  22,
  42,
  { 3: }
  21,
  22,
  42,
  { 4: }
  21,
  22,
  42,
  { 5: }
  21,
  22,
  42,
  { 6: }
  21,
  22,
  42,
  { 7: }
  21,
  22,
  42,
  { 8: }
  21,
  22,
  42,
  { 9: }
  21,
  22,
  42,
  { 10: }
  21,
  22,
  42,
  { 11: }
  21,
  22,
  42,
  { 12: }
  21,
  22,
  42,
  { 13: }
  21,
  22,
  42,
  { 14: }
  21,
  22,
  42,
  { 15: }
  19,
  22,
  42,
  { 16: }
  21,
  22,
  42,
  { 17: }
  23,
  42,
  { 18: }
  24,
  42,
  { 19: }
  25,
  42,
  { 20: }
  26,
  42,
  { 21: }
  27,
  42,
  { 22: }
  28,
  42,
  { 23: }
  29,
  42,
  { 24: }
  30,
  42,
  { 25: }
  31,
  42,
  { 26: }
  32,
  42,
  { 27: }
  33,
  42,
  { 28: }
  34,
  42,
  { 29: }
  35,
  42,
  { 30: }
  41,
  42,
  { 31: }
  42,
  { 32: }
  21,
  22,
  { 33: }
  21,
  22,
  { 34: }
  2,
  21,
  22,
  { 35: }
  21,
  22,
  { 36: }
  21,
  22,
  { 37: }
  21,
  22,
  { 38: }
  21,
  22,
  { 39: }
  21,
  22,
  { 40: }
  21,
  22,
  { 41: }
  21,
  22,
  { 42: }
  8,
  21,
  22,
  { 43: }
  21,
  22,
  { 44: }
  21,
  22,
  { 45: }
  21,
  22,
  { 46: }
  21,
  22,
  { 47: }
  21,
  22,
  { 48: }
  21,
  22,
  { 49: }
  21,
  22,
  { 50: }
  19,
  22,
  { 51: }
  { 52: }
  22,
  { 53: }
  36,
  { 54: }
  40,
  { 55: }
  37,
  { 56: }
  38,
  { 57: }
  39,
  { 58: }
  1,
  21,
  22,
  { 59: }
  21,
  22,
  { 60: }
  21,
  22,
  { 61: }
  21,
  22,
  { 62: }
  6,
  21,
  22,
  { 63: }
  21,
  22,
  { 64: }
  21,
  22,
  { 65: }
  7,
  21,
  22,
  { 66: }
  21,
  22,
  { 67: }
  21,
  22,
  { 68: }
  10,
  21,
  22,
  { 69: }
  11,
  21,
  22,
  { 70: }
  21,
  22,
  { 71: }
  21,
  22,
  { 72: }
  21,
  22,
  { 73: }
  20,
  { 74: }
  21,
  22,
  { 75: }
  3,
  21,
  22,
  { 76: }
  4,
  21,
  22,
  { 77: }
  21,
  22,
  { 78: }
  21,
  22,
  { 79: }
  21,
  22,
  { 80: }
  12,
  21,
  22,
  { 81: }
  15,
  21,
  22,
  { 82: }
  21,
  22,
  { 83: }
  21,
  22,
  { 84: }
  17,
  21,
  22,
  { 85: }
  21,
  22,
  { 86: }
  5,
  21,
  22,
  { 87: }
  21,
  22,
  { 88: }
  9,
  21,
  22,
  { 89: }
  13,
  21,
  22,
  { 90: }
  21,
  22,
  { 91: }
  21,
  22,
  { 92: }
  21,
  22,
  { 93: }
  16,
  21,
  22,
  { 94: }
  14,
  21,
  22,
  { 95: }
  18,
  21,
  22
);

yym : array [1..yynmatches] of Integer = (
{ 0: }
{ 1: }
{ 2: }
  21,
  22,
  42,
{ 3: }
  21,
  22,
  42,
{ 4: }
  21,
  22,
  42,
{ 5: }
  21,
  22,
  42,
{ 6: }
  21,
  22,
  42,
{ 7: }
  21,
  22,
  42,
{ 8: }
  21,
  22,
  42,
{ 9: }
  21,
  22,
  42,
{ 10: }
  21,
  22,
  42,
{ 11: }
  21,
  22,
  42,
{ 12: }
  21,
  22,
  42,
{ 13: }
  21,
  22,
  42,
{ 14: }
  21,
  22,
  42,
{ 15: }
  19,
  22,
  42,
{ 16: }
  21,
  22,
  42,
{ 17: }
  23,
  42,
{ 18: }
  24,
  42,
{ 19: }
  25,
  42,
{ 20: }
  26,
  42,
{ 21: }
  27,
  42,
{ 22: }
  28,
  42,
{ 23: }
  29,
  42,
{ 24: }
  30,
  42,
{ 25: }
  31,
  42,
{ 26: }
  32,
  42,
{ 27: }
  33,
  42,
{ 28: }
  34,
  42,
{ 29: }
  35,
  42,
{ 30: }
  41,
  42,
{ 31: }
  42,
{ 32: }
  21,
  22,
{ 33: }
  21,
  22,
{ 34: }
  2,
  21,
  22,
{ 35: }
  21,
  22,
{ 36: }
  21,
  22,
{ 37: }
  21,
  22,
{ 38: }
  21,
  22,
{ 39: }
  21,
  22,
{ 40: }
  21,
  22,
{ 41: }
  21,
  22,
{ 42: }
  8,
  21,
  22,
{ 43: }
  21,
  22,
{ 44: }
  21,
  22,
{ 45: }
  21,
  22,
{ 46: }
  21,
  22,
{ 47: }
  21,
  22,
{ 48: }
  21,
  22,
{ 49: }
  21,
  22,
{ 50: }
  19,
  22,
{ 51: }
{ 52: }
  22,
{ 53: }
  36,
{ 54: }
  40,
{ 55: }
  37,
{ 56: }
  38,
{ 57: }
  39,
{ 58: }
  1,
  21,
  22,
{ 59: }
  21,
  22,
{ 60: }
  21,
  22,
{ 61: }
  21,
  22,
{ 62: }
  6,
  21,
  22,
{ 63: }
  21,
  22,
{ 64: }
  21,
  22,
{ 65: }
  7,
  21,
  22,
{ 66: }
  21,
  22,
{ 67: }
  21,
  22,
{ 68: }
  10,
  21,
  22,
{ 69: }
  11,
  21,
  22,
{ 70: }
  21,
  22,
{ 71: }
  21,
  22,
{ 72: }
  21,
  22,
{ 73: }
  20,
{ 74: }
  21,
  22,
{ 75: }
  3,
  21,
  22,
{ 76: }
  4,
  21,
  22,
{ 77: }
  21,
  22,
{ 78: }
  21,
  22,
{ 79: }
  21,
  22,
{ 80: }
  12,
  21,
  22,
{ 81: }
  15,
  21,
  22,
{ 82: }
  21,
  22,
{ 83: }
  21,
  22,
{ 84: }
  17,
  21,
  22,
{ 85: }
  21,
  22,
{ 86: }
  5,
  21,
  22,
{ 87: }
  21,
  22,
{ 88: }
  9,
  21,
  22,
{ 89: }
  13,
  21,
  22,
{ 90: }
  21,
  22,
{ 91: }
  21,
  22,
{ 92: }
  21,
  22,
{ 93: }
  16,
  21,
  22,
{ 94: }
  14,
  21,
  22,
{ 95: }
  18,
  21,
  22
);

yyt : array [1..yyntrans] of YYTrec = (
{ 0: }
  ( cc: [ #1..#9,#11..#31,'!'..'''','?','@','['..'`',
            '{'..#255 ]; s: 31),
  ( cc: [ ' ' ]; s: 30),
  ( cc: [ '(' ]; s: 26),
  ( cc: [ ')' ]; s: 27),
  ( cc: [ '*' ]; s: 19),
  ( cc: [ '+' ]; s: 17),
  ( cc: [ ',' ]; s: 29),
  ( cc: [ '-' ]; s: 18),
  ( cc: [ '.' ]; s: 28),
  ( cc: [ '/' ]; s: 20),
  ( cc: [ '0'..'9' ]; s: 15),
  ( cc: [ ':' ]; s: 25),
  ( cc: [ ';' ]; s: 24),
  ( cc: [ '<' ]; s: 21),
  ( cc: [ '=' ]; s: 23),
  ( cc: [ '>' ]; s: 22),
  ( cc: [ 'A'..'Z','f'..'h','j'..'l','n','p','q','u',
            'x'..'z' ]; s: 16),
  ( cc: [ 'a' ]; s: 7),
  ( cc: [ 'b' ]; s: 6),
  ( cc: [ 'c' ]; s: 14),
  ( cc: [ 'd' ]; s: 10),
  ( cc: [ 'e' ]; s: 5),
  ( cc: [ 'i' ]; s: 3),
  ( cc: [ 'm' ]; s: 11),
  ( cc: [ 'o' ]; s: 8),
  ( cc: [ 'r' ]; s: 9),
  ( cc: [ 's' ]; s: 13),
  ( cc: [ 't' ]; s: 4),
  ( cc: [ 'v' ]; s: 2),
  ( cc: [ 'w' ]; s: 12),
{ 1: }
  ( cc: [ #1..#9,#11..#31,'!'..'''','?','@','['..'`',
            '{'..#255 ]; s: 31),
  ( cc: [ ' ' ]; s: 30),
  ( cc: [ '(' ]; s: 26),
  ( cc: [ ')' ]; s: 27),
  ( cc: [ '*' ]; s: 19),
  ( cc: [ '+' ]; s: 17),
  ( cc: [ ',' ]; s: 29),
  ( cc: [ '-' ]; s: 18),
  ( cc: [ '.' ]; s: 28),
  ( cc: [ '/' ]; s: 20),
  ( cc: [ '0'..'9' ]; s: 15),
  ( cc: [ ':' ]; s: 25),
  ( cc: [ ';' ]; s: 24),
  ( cc: [ '<' ]; s: 21),
  ( cc: [ '=' ]; s: 23),
  ( cc: [ '>' ]; s: 22),
  ( cc: [ 'A'..'Z','f'..'h','j'..'l','n','p','q','u',
            'x'..'z' ]; s: 16),
  ( cc: [ 'a' ]; s: 7),
  ( cc: [ 'b' ]; s: 6),
  ( cc: [ 'c' ]; s: 14),
  ( cc: [ 'd' ]; s: 10),
  ( cc: [ 'e' ]; s: 5),
  ( cc: [ 'i' ]; s: 3),
  ( cc: [ 'm' ]; s: 11),
  ( cc: [ 'o' ]; s: 8),
  ( cc: [ 'r' ]; s: 9),
  ( cc: [ 's' ]; s: 13),
  ( cc: [ 't' ]; s: 4),
  ( cc: [ 'v' ]; s: 2),
  ( cc: [ 'w' ]; s: 12),
{ 2: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 33),
  ( cc: [ 'a' ]; s: 32),
{ 3: }
  ( cc: [ '0'..'9','A'..'Z','a'..'e','g'..'m','o'..'z' ]; s: 33),
  ( cc: [ 'f' ]; s: 34),
  ( cc: [ 'n' ]; s: 35),
{ 4: }
  ( cc: [ '0'..'9','A'..'Z','a'..'g','i'..'z' ]; s: 33),
  ( cc: [ 'h' ]; s: 36),
{ 5: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m','o'..'z' ]; s: 33),
  ( cc: [ 'l' ]; s: 37),
  ( cc: [ 'n' ]; s: 38),
{ 6: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'n','p'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 39),
  ( cc: [ 'o' ]; s: 40),
{ 7: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 33),
  ( cc: [ 'n' ]; s: 41),
{ 8: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 33),
  ( cc: [ 'r' ]; s: 42),
{ 9: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'n','p'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 44),
  ( cc: [ 'o' ]; s: 43),
{ 10: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 33),
  ( cc: [ 'i' ]; s: 45),
{ 11: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 33),
  ( cc: [ 'o' ]; s: 46),
{ 12: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 33),
  ( cc: [ 'r' ]; s: 47),
{ 13: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 33),
  ( cc: [ 't' ]; s: 48),
{ 14: }
  ( cc: [ '0'..'9','A'..'Z','a'..'g','i'..'z' ]; s: 33),
  ( cc: [ 'h' ]; s: 49),
{ 15: }
  ( cc: [ '''',',','.' ]; s: 51),
  ( cc: [ '0'..'9' ]; s: 50),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 52),
{ 16: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 17: }
{ 18: }
{ 19: }
{ 20: }
{ 21: }
  ( cc: [ '=' ]; s: 53),
  ( cc: [ '>' ]; s: 54),
{ 22: }
  ( cc: [ '=' ]; s: 55),
{ 23: }
  ( cc: [ '<' ]; s: 56),
  ( cc: [ '>' ]; s: 57),
{ 24: }
{ 25: }
{ 26: }
{ 27: }
{ 28: }
{ 29: }
{ 30: }
{ 31: }
{ 32: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 33),
  ( cc: [ 'r' ]; s: 58),
{ 33: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 34: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 35: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 33),
  ( cc: [ 't' ]; s: 59),
{ 36: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 60),
{ 37: }
  ( cc: [ '0'..'9','A'..'Z','a'..'r','t'..'z' ]; s: 33),
  ( cc: [ 's' ]; s: 61),
{ 38: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 33),
  ( cc: [ 'd' ]; s: 62),
{ 39: }
  ( cc: [ '0'..'9','A'..'Z','a'..'f','h'..'z' ]; s: 33),
  ( cc: [ 'g' ]; s: 63),
{ 40: }
  ( cc: [ '0'..'9','A'..'Z','a'..'n','p'..'z' ]; s: 33),
  ( cc: [ 'o' ]; s: 64),
{ 41: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 33),
  ( cc: [ 'd' ]; s: 65),
{ 42: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 43: }
  ( cc: [ '0'..'9','A'..'Z','a'..'t','v'..'z' ]; s: 33),
  ( cc: [ 'u' ]; s: 66),
{ 44: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 33),
  ( cc: [ 'a' ]; s: 67),
{ 45: }
  ( cc: [ '0'..'9','A'..'Z','a'..'u','w'..'z' ]; s: 33),
  ( cc: [ 'v' ]; s: 68),
{ 46: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 33),
  ( cc: [ 'd' ]; s: 69),
{ 47: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 33),
  ( cc: [ 'i' ]; s: 70),
{ 48: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 33),
  ( cc: [ 'r' ]; s: 71),
{ 49: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 33),
  ( cc: [ 'a' ]; s: 72),
{ 50: }
  ( cc: [ '''',',','.' ]; s: 51),
  ( cc: [ '0'..'9' ]; s: 50),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 52),
{ 51: }
  ( cc: [ '0'..'9' ]; s: 73),
{ 52: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 52),
{ 53: }
{ 54: }
{ 55: }
{ 56: }
{ 57: }
{ 58: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 59: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 74),
{ 60: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 33),
  ( cc: [ 'n' ]; s: 75),
{ 61: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 76),
{ 62: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 63: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 33),
  ( cc: [ 'i' ]; s: 77),
{ 64: }
  ( cc: [ '0'..'9','A'..'Z','a'..'k','m'..'z' ]; s: 33),
  ( cc: [ 'l' ]; s: 78),
{ 65: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 66: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 33),
  ( cc: [ 'n' ]; s: 79),
{ 67: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'k','m'..'z' ]; s: 33),
  ( cc: [ 'd' ]; s: 80),
  ( cc: [ 'l' ]; s: 81),
{ 68: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 69: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 70: }
  ( cc: [ '0'..'9','A'..'Z','a'..'s','u'..'z' ]; s: 33),
  ( cc: [ 't' ]; s: 82),
{ 71: }
  ( cc: [ '0'..'9','A'..'Z','a'..'h','j'..'z' ]; s: 33),
  ( cc: [ 'i' ]; s: 83),
{ 72: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 33),
  ( cc: [ 'r' ]; s: 84),
{ 73: }
  ( cc: [ '0'..'9' ]; s: 73),
{ 74: }
  ( cc: [ '0'..'9','A'..'Z','a'..'f','h'..'z' ]; s: 33),
  ( cc: [ 'g' ]; s: 85),
{ 75: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 76: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 77: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 33),
  ( cc: [ 'n' ]; s: 86),
{ 78: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 87),
{ 79: }
  ( cc: [ '0'..'9','A'..'Z','a'..'c','e'..'z' ]; s: 33),
  ( cc: [ 'd' ]; s: 88),
{ 80: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 81: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 82: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 89),
{ 83: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 33),
  ( cc: [ 'n' ]; s: 90),
{ 84: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 85: }
  ( cc: [ '0'..'9','A'..'Z','a'..'d','f'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 91),
{ 86: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 87: }
  ( cc: [ '0'..'9','A'..'Z','b'..'z' ]; s: 33),
  ( cc: [ 'a' ]; s: 92),
{ 88: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 89: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 90: }
  ( cc: [ '0'..'9','A'..'Z','a'..'f','h'..'z' ]; s: 33),
  ( cc: [ 'g' ]; s: 93),
{ 91: }
  ( cc: [ '0'..'9','A'..'Z','a'..'q','s'..'z' ]; s: 33),
  ( cc: [ 'r' ]; s: 94),
{ 92: }
  ( cc: [ '0'..'9','A'..'Z','a'..'m','o'..'z' ]; s: 33),
  ( cc: [ 'n' ]; s: 95),
{ 93: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 94: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33),
{ 95: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 33)
);

yykl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 4,
{ 4: } 7,
{ 5: } 10,
{ 6: } 13,
{ 7: } 16,
{ 8: } 19,
{ 9: } 22,
{ 10: } 25,
{ 11: } 28,
{ 12: } 31,
{ 13: } 34,
{ 14: } 37,
{ 15: } 40,
{ 16: } 43,
{ 17: } 46,
{ 18: } 48,
{ 19: } 50,
{ 20: } 52,
{ 21: } 54,
{ 22: } 56,
{ 23: } 58,
{ 24: } 60,
{ 25: } 62,
{ 26: } 64,
{ 27: } 66,
{ 28: } 68,
{ 29: } 70,
{ 30: } 72,
{ 31: } 74,
{ 32: } 75,
{ 33: } 77,
{ 34: } 79,
{ 35: } 82,
{ 36: } 84,
{ 37: } 86,
{ 38: } 88,
{ 39: } 90,
{ 40: } 92,
{ 41: } 94,
{ 42: } 96,
{ 43: } 99,
{ 44: } 101,
{ 45: } 103,
{ 46: } 105,
{ 47: } 107,
{ 48: } 109,
{ 49: } 111,
{ 50: } 113,
{ 51: } 115,
{ 52: } 115,
{ 53: } 116,
{ 54: } 117,
{ 55: } 118,
{ 56: } 119,
{ 57: } 120,
{ 58: } 121,
{ 59: } 124,
{ 60: } 126,
{ 61: } 128,
{ 62: } 130,
{ 63: } 133,
{ 64: } 135,
{ 65: } 137,
{ 66: } 140,
{ 67: } 142,
{ 68: } 144,
{ 69: } 147,
{ 70: } 150,
{ 71: } 152,
{ 72: } 154,
{ 73: } 156,
{ 74: } 157,
{ 75: } 159,
{ 76: } 162,
{ 77: } 165,
{ 78: } 167,
{ 79: } 169,
{ 80: } 171,
{ 81: } 174,
{ 82: } 177,
{ 83: } 179,
{ 84: } 181,
{ 85: } 184,
{ 86: } 186,
{ 87: } 189,
{ 88: } 191,
{ 89: } 194,
{ 90: } 197,
{ 91: } 199,
{ 92: } 201,
{ 93: } 203,
{ 94: } 206,
{ 95: } 209
);

yykh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 3,
{ 3: } 6,
{ 4: } 9,
{ 5: } 12,
{ 6: } 15,
{ 7: } 18,
{ 8: } 21,
{ 9: } 24,
{ 10: } 27,
{ 11: } 30,
{ 12: } 33,
{ 13: } 36,
{ 14: } 39,
{ 15: } 42,
{ 16: } 45,
{ 17: } 47,
{ 18: } 49,
{ 19: } 51,
{ 20: } 53,
{ 21: } 55,
{ 22: } 57,
{ 23: } 59,
{ 24: } 61,
{ 25: } 63,
{ 26: } 65,
{ 27: } 67,
{ 28: } 69,
{ 29: } 71,
{ 30: } 73,
{ 31: } 74,
{ 32: } 76,
{ 33: } 78,
{ 34: } 81,
{ 35: } 83,
{ 36: } 85,
{ 37: } 87,
{ 38: } 89,
{ 39: } 91,
{ 40: } 93,
{ 41: } 95,
{ 42: } 98,
{ 43: } 100,
{ 44: } 102,
{ 45: } 104,
{ 46: } 106,
{ 47: } 108,
{ 48: } 110,
{ 49: } 112,
{ 50: } 114,
{ 51: } 114,
{ 52: } 115,
{ 53: } 116,
{ 54: } 117,
{ 55: } 118,
{ 56: } 119,
{ 57: } 120,
{ 58: } 123,
{ 59: } 125,
{ 60: } 127,
{ 61: } 129,
{ 62: } 132,
{ 63: } 134,
{ 64: } 136,
{ 65: } 139,
{ 66: } 141,
{ 67: } 143,
{ 68: } 146,
{ 69: } 149,
{ 70: } 151,
{ 71: } 153,
{ 72: } 155,
{ 73: } 156,
{ 74: } 158,
{ 75: } 161,
{ 76: } 164,
{ 77: } 166,
{ 78: } 168,
{ 79: } 170,
{ 80: } 173,
{ 81: } 176,
{ 82: } 178,
{ 83: } 180,
{ 84: } 183,
{ 85: } 185,
{ 86: } 188,
{ 87: } 190,
{ 88: } 193,
{ 89: } 196,
{ 90: } 198,
{ 91: } 200,
{ 92: } 202,
{ 93: } 205,
{ 94: } 208,
{ 95: } 211
);

yyml : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 4,
{ 4: } 7,
{ 5: } 10,
{ 6: } 13,
{ 7: } 16,
{ 8: } 19,
{ 9: } 22,
{ 10: } 25,
{ 11: } 28,
{ 12: } 31,
{ 13: } 34,
{ 14: } 37,
{ 15: } 40,
{ 16: } 43,
{ 17: } 46,
{ 18: } 48,
{ 19: } 50,
{ 20: } 52,
{ 21: } 54,
{ 22: } 56,
{ 23: } 58,
{ 24: } 60,
{ 25: } 62,
{ 26: } 64,
{ 27: } 66,
{ 28: } 68,
{ 29: } 70,
{ 30: } 72,
{ 31: } 74,
{ 32: } 75,
{ 33: } 77,
{ 34: } 79,
{ 35: } 82,
{ 36: } 84,
{ 37: } 86,
{ 38: } 88,
{ 39: } 90,
{ 40: } 92,
{ 41: } 94,
{ 42: } 96,
{ 43: } 99,
{ 44: } 101,
{ 45: } 103,
{ 46: } 105,
{ 47: } 107,
{ 48: } 109,
{ 49: } 111,
{ 50: } 113,
{ 51: } 115,
{ 52: } 115,
{ 53: } 116,
{ 54: } 117,
{ 55: } 118,
{ 56: } 119,
{ 57: } 120,
{ 58: } 121,
{ 59: } 124,
{ 60: } 126,
{ 61: } 128,
{ 62: } 130,
{ 63: } 133,
{ 64: } 135,
{ 65: } 137,
{ 66: } 140,
{ 67: } 142,
{ 68: } 144,
{ 69: } 147,
{ 70: } 150,
{ 71: } 152,
{ 72: } 154,
{ 73: } 156,
{ 74: } 157,
{ 75: } 159,
{ 76: } 162,
{ 77: } 165,
{ 78: } 167,
{ 79: } 169,
{ 80: } 171,
{ 81: } 174,
{ 82: } 177,
{ 83: } 179,
{ 84: } 181,
{ 85: } 184,
{ 86: } 186,
{ 87: } 189,
{ 88: } 191,
{ 89: } 194,
{ 90: } 197,
{ 91: } 199,
{ 92: } 201,
{ 93: } 203,
{ 94: } 206,
{ 95: } 209
);

yymh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 3,
{ 3: } 6,
{ 4: } 9,
{ 5: } 12,
{ 6: } 15,
{ 7: } 18,
{ 8: } 21,
{ 9: } 24,
{ 10: } 27,
{ 11: } 30,
{ 12: } 33,
{ 13: } 36,
{ 14: } 39,
{ 15: } 42,
{ 16: } 45,
{ 17: } 47,
{ 18: } 49,
{ 19: } 51,
{ 20: } 53,
{ 21: } 55,
{ 22: } 57,
{ 23: } 59,
{ 24: } 61,
{ 25: } 63,
{ 26: } 65,
{ 27: } 67,
{ 28: } 69,
{ 29: } 71,
{ 30: } 73,
{ 31: } 74,
{ 32: } 76,
{ 33: } 78,
{ 34: } 81,
{ 35: } 83,
{ 36: } 85,
{ 37: } 87,
{ 38: } 89,
{ 39: } 91,
{ 40: } 93,
{ 41: } 95,
{ 42: } 98,
{ 43: } 100,
{ 44: } 102,
{ 45: } 104,
{ 46: } 106,
{ 47: } 108,
{ 48: } 110,
{ 49: } 112,
{ 50: } 114,
{ 51: } 114,
{ 52: } 115,
{ 53: } 116,
{ 54: } 117,
{ 55: } 118,
{ 56: } 119,
{ 57: } 120,
{ 58: } 123,
{ 59: } 125,
{ 60: } 127,
{ 61: } 129,
{ 62: } 132,
{ 63: } 134,
{ 64: } 136,
{ 65: } 139,
{ 66: } 141,
{ 67: } 143,
{ 68: } 146,
{ 69: } 149,
{ 70: } 151,
{ 71: } 153,
{ 72: } 155,
{ 73: } 156,
{ 74: } 158,
{ 75: } 161,
{ 76: } 164,
{ 77: } 166,
{ 78: } 168,
{ 79: } 170,
{ 80: } 173,
{ 81: } 176,
{ 82: } 178,
{ 83: } 180,
{ 84: } 183,
{ 85: } 185,
{ 86: } 188,
{ 87: } 190,
{ 88: } 193,
{ 89: } 196,
{ 90: } 198,
{ 91: } 200,
{ 92: } 202,
{ 93: } 205,
{ 94: } 208,
{ 95: } 211
);

yytl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 31,
{ 2: } 61,
{ 3: } 63,
{ 4: } 66,
{ 5: } 68,
{ 6: } 71,
{ 7: } 74,
{ 8: } 76,
{ 9: } 78,
{ 10: } 81,
{ 11: } 83,
{ 12: } 85,
{ 13: } 87,
{ 14: } 89,
{ 15: } 91,
{ 16: } 94,
{ 17: } 95,
{ 18: } 95,
{ 19: } 95,
{ 20: } 95,
{ 21: } 95,
{ 22: } 97,
{ 23: } 98,
{ 24: } 100,
{ 25: } 100,
{ 26: } 100,
{ 27: } 100,
{ 28: } 100,
{ 29: } 100,
{ 30: } 100,
{ 31: } 100,
{ 32: } 100,
{ 33: } 102,
{ 34: } 103,
{ 35: } 104,
{ 36: } 106,
{ 37: } 108,
{ 38: } 110,
{ 39: } 112,
{ 40: } 114,
{ 41: } 116,
{ 42: } 118,
{ 43: } 119,
{ 44: } 121,
{ 45: } 123,
{ 46: } 125,
{ 47: } 127,
{ 48: } 129,
{ 49: } 131,
{ 50: } 133,
{ 51: } 136,
{ 52: } 137,
{ 53: } 138,
{ 54: } 138,
{ 55: } 138,
{ 56: } 138,
{ 57: } 138,
{ 58: } 138,
{ 59: } 139,
{ 60: } 141,
{ 61: } 143,
{ 62: } 145,
{ 63: } 146,
{ 64: } 148,
{ 65: } 150,
{ 66: } 151,
{ 67: } 153,
{ 68: } 156,
{ 69: } 157,
{ 70: } 158,
{ 71: } 160,
{ 72: } 162,
{ 73: } 164,
{ 74: } 165,
{ 75: } 167,
{ 76: } 168,
{ 77: } 169,
{ 78: } 171,
{ 79: } 173,
{ 80: } 175,
{ 81: } 176,
{ 82: } 177,
{ 83: } 179,
{ 84: } 181,
{ 85: } 182,
{ 86: } 184,
{ 87: } 185,
{ 88: } 187,
{ 89: } 188,
{ 90: } 189,
{ 91: } 191,
{ 92: } 193,
{ 93: } 195,
{ 94: } 196,
{ 95: } 197
);

yyth : array [0..yynstates-1] of Integer = (
{ 0: } 30,
{ 1: } 60,
{ 2: } 62,
{ 3: } 65,
{ 4: } 67,
{ 5: } 70,
{ 6: } 73,
{ 7: } 75,
{ 8: } 77,
{ 9: } 80,
{ 10: } 82,
{ 11: } 84,
{ 12: } 86,
{ 13: } 88,
{ 14: } 90,
{ 15: } 93,
{ 16: } 94,
{ 17: } 94,
{ 18: } 94,
{ 19: } 94,
{ 20: } 94,
{ 21: } 96,
{ 22: } 97,
{ 23: } 99,
{ 24: } 99,
{ 25: } 99,
{ 26: } 99,
{ 27: } 99,
{ 28: } 99,
{ 29: } 99,
{ 30: } 99,
{ 31: } 99,
{ 32: } 101,
{ 33: } 102,
{ 34: } 103,
{ 35: } 105,
{ 36: } 107,
{ 37: } 109,
{ 38: } 111,
{ 39: } 113,
{ 40: } 115,
{ 41: } 117,
{ 42: } 118,
{ 43: } 120,
{ 44: } 122,
{ 45: } 124,
{ 46: } 126,
{ 47: } 128,
{ 48: } 130,
{ 49: } 132,
{ 50: } 135,
{ 51: } 136,
{ 52: } 137,
{ 53: } 137,
{ 54: } 137,
{ 55: } 137,
{ 56: } 137,
{ 57: } 137,
{ 58: } 138,
{ 59: } 140,
{ 60: } 142,
{ 61: } 144,
{ 62: } 145,
{ 63: } 147,
{ 64: } 149,
{ 65: } 150,
{ 66: } 152,
{ 67: } 155,
{ 68: } 156,
{ 69: } 157,
{ 70: } 159,
{ 71: } 161,
{ 72: } 163,
{ 73: } 164,
{ 74: } 166,
{ 75: } 167,
{ 76: } 168,
{ 77: } 170,
{ 78: } 172,
{ 79: } 174,
{ 80: } 175,
{ 81: } 176,
{ 82: } 178,
{ 83: } 180,
{ 84: } 181,
{ 85: } 183,
{ 86: } 184,
{ 87: } 186,
{ 88: } 187,
{ 89: } 188,
{ 90: } 190,
{ 91: } 192,
{ 92: } 194,
{ 93: } 195,
{ 94: } 196,
{ 95: } 197
);


var yyn : Integer;

label start, scan, action;

begin

start:

  (* initialize: *)

  yynew;

scan:

  (* mark positions and matches: *)

  for yyn := yykl[yystate] to     yykh[yystate] do yymark(yyk[yyn]);
  for yyn := yymh[yystate] downto yyml[yystate] do yymatch(yym[yyn]);

  if yytl[yystate]>yyth[yystate] then goto action; (* dead state *)

  (* get next character: *)

  yyscan;

  (* determine action: *)

  yyn := yytl[yystate];
  while (yyn<=yyth[yystate]) and not (yyactchar in yyt[yyn].cc) do inc(yyn);
  if yyn>yyth[yystate] then goto action;
    (* no transition on yyactchar in this state *)

  (* switch to new state: *)

  yystate := yyt[yyn].s;

  goto scan;

action:

  (* execute action: *)

  if yyfind(yyrule) then
    begin
      yyaction(yyrule);
      if yyreject then goto action;
    end
  else if not yydefault and yywrap then
    begin
      yyclear;
      returni(0);
    end;

  if not yydone then goto start;

  yylex := yyretval;

end(*yylex*);


end. 
